version: '3.8'

services:
  inventory-service:
    build:
      context: ./inventory-service
    container_name: inventory-service
    restart: unless-stopped
    tty: true
    volumes:
      - ./inventory-service:/var/www
      - ./inventory-service/docker/nginx/default.conf:/etc/nginx/sites-available/default
      - ./inventory-service/docker/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
    networks:
      - app-network
    depends_on:
      - mysql
      - rabbitmq
      - redis
    ports:
      - "8001:80"

  order-service:
    build:
      context: ./order-service
    container_name: order-service
    restart: unless-stopped
    tty: true
    volumes:
      - ./order-service:/var/www
      - ./order-service/docker/nginx/default.conf:/etc/nginx/sites-available/default
      - ./order-service/docker/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
    networks:
      - app-network
    depends_on:
      - mysql
      - rabbitmq
      - redis
    ports:
      - "8002:80"

  auth-service:
    build:
      context: ./auth-service
    container_name: auth-service
    restart: unless-stopped
    tty: true
    volumes:
      - ./auth-service:/var/www
      - ./auth-service/docker/nginx/default.conf:/etc/nginx/sites-available/default
      - ./auth-service/docker/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
    networks:
      - app-network
    depends_on:
      - mysql
      - redis
    ports:
      - "8003:80"

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    networks:
      - app-network
    depends_on:
      - inventory-service
      - order-service
      - auth-service

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: